/*
    Copyright 2010-2021 David "Alemarius Nexus" Lerch

    This file is part of electronicsdb.

    electronicsdb is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    electronicsdb is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with electronicsdb.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "../../global.h"

#include <unordered_map>
#include <QList>
#include <QString>
#include <QVariant>
#include "SQLCommand.h"

namespace electronicsdb
{


/**
 * If values for the ID field are specified, they will be used for the insertion. If not, they will be generated by
 * the DBMS and can be queried after the first command execution with getInsertIDs(). In any case, getInsertIDs() will
 * return the IDs for ALL inserted rows, whether IDs were explicitly specified or not.
 */
class SQLInsertCommand : public SQLCommand
{
public:
    using DataMap = QMap<QString, QVariant>;
    using DataMapList = QList<DataMap>;

public:
    SQLInsertCommand(const QString& tableName, const QString& idField);
    SQLInsertCommand(const QString& tableName, const QString& idField, const DataMapList& data);
    SQLInsertCommand(const QString& tableName, const QString& idField, const DataMap& data);
    const QList<dbid_t>& getInsertIDs() { return insIDs; }

    void setData(const DataMapList& data);
    void setData(const DataMap& data) { DataMapList l; l << data; setData(l); }

protected:
    void doCommit() override;
    void doRevert() override;

private:
    QString tableName;
    QString idField;
    DataMapList data;
    QList<dbid_t> insIDs;
};


}
